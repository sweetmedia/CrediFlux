# Generated by Django 5.0.9 on 2025-10-30 17:43

import django.db.models.deletion
import django.utils.timezone
import djmoney.models.fields
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("loans", "0003_customerdocument"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="loanschedule",
            name="actual_payment_date",
            field=models.DateField(
                blank=True,
                help_text="Fecha real del pago (puede diferir de due_date)",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="loanschedule",
            name="days_overdue",
            field=models.IntegerField(
                default=0, help_text="Días de atraso (auto-calculado)"
            ),
        ),
        migrations.AddField(
            model_name="loanschedule",
            name="late_fee_amount",
            field=djmoney.models.fields.MoneyField(
                decimal_places=2,
                default=Decimal("0.00"),
                help_text="Monto de mora acumulado",
                max_digits=14,
            ),
        ),
        migrations.AddField(
            model_name="loanschedule",
            name="late_fee_amount_currency",
            field=djmoney.models.fields.CurrencyField(
                choices=[
                    ("DOP", "Dominican Peso"),
                    ("EUR", "Euro"),
                    ("USD", "US Dollar"),
                ],
                default="USD",
                editable=False,
                max_length=3,
            ),
        ),
        migrations.AddField(
            model_name="loanschedule",
            name="late_fee_paid",
            field=djmoney.models.fields.MoneyField(
                decimal_places=2,
                default=Decimal("0.00"),
                help_text="Mora pagada",
                max_digits=14,
            ),
        ),
        migrations.AddField(
            model_name="loanschedule",
            name="late_fee_paid_currency",
            field=djmoney.models.fields.CurrencyField(
                choices=[
                    ("DOP", "Dominican Peso"),
                    ("EUR", "Euro"),
                    ("USD", "US Dollar"),
                ],
                default="USD",
                editable=False,
                max_length=3,
            ),
        ),
        migrations.AlterField(
            model_name="loanschedule",
            name="status",
            field=models.CharField(
                choices=[
                    ("pending", "Pending"),
                    ("paid", "Paid"),
                    ("overdue", "Overdue"),
                    ("partial", "Partially Paid"),
                    ("written_off", "Written Off"),
                ],
                default="pending",
                max_length=20,
            ),
        ),
        migrations.CreateModel(
            name="CollectionContact",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "contact_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "contact_type",
                    models.CharField(
                        choices=[
                            ("phone_call", "Llamada Telefónica"),
                            ("sms", "SMS"),
                            ("whatsapp", "WhatsApp"),
                            ("email", "Email"),
                            ("home_visit", "Visita Domicilio"),
                            ("office_visit", "Visita Oficina"),
                            ("meeting", "Reunión Acordada"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "outcome",
                    models.CharField(
                        choices=[
                            ("answered", "Cliente Contestó/Atendió"),
                            ("no_answer", "No Contestó"),
                            ("wrong_number", "Número Equivocado"),
                            ("promise_to_pay", "Promesa de Pago"),
                            ("payment_plan", "Plan de Pagos Acordado"),
                            ("partial_payment", "Pago Parcial Recibido"),
                            ("full_payment", "Pago Completo Recibido"),
                            ("dispute", "Cliente Disputa la Deuda"),
                            ("hardship", "Dificultad Económica"),
                            ("refused_to_pay", "Se Niega a Pagar"),
                            ("not_reachable", "No Localizable"),
                        ],
                        max_length=30,
                    ),
                ),
                ("promise_date", models.DateField(blank=True, null=True)),
                (
                    "promise_amount_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[
                            ("DOP", "Dominican Peso"),
                            ("EUR", "Euro"),
                            ("USD", "US Dollar"),
                        ],
                        default="USD",
                        editable=False,
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "promise_amount",
                    djmoney.models.fields.MoneyField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "promise_kept",
                    models.BooleanField(
                        blank=True, help_text="¿Cumplió la promesa de pago?", null=True
                    ),
                ),
                ("notes", models.TextField(help_text="Detalles de la conversación")),
                ("next_contact_date", models.DateField(blank=True, null=True)),
                (
                    "requires_escalation",
                    models.BooleanField(
                        default=False, help_text="Requiere escalamiento a supervisor"
                    ),
                ),
                (
                    "contacted_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="collection_contacts_made",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="collection_contacts",
                        to="loans.customer",
                    ),
                ),
                (
                    "loan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="collection_contacts",
                        to="loans.loan",
                    ),
                ),
            ],
            options={
                "verbose_name": "Collection Contact",
                "verbose_name_plural": "Collection Contacts",
                "db_table": "collection_contacts",
                "ordering": ["-contact_date"],
            },
        ),
        migrations.CreateModel(
            name="CollectionReminder",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "reminder_type",
                    models.CharField(
                        choices=[
                            ("upcoming_3", "Pago Próximo (3 días antes)"),
                            ("upcoming_1", "Pago Próximo (1 día antes)"),
                            ("due_today", "Vence Hoy"),
                            ("overdue_1", "Atrasado 1 día"),
                            ("overdue_3", "Atrasado 3 días"),
                            ("overdue_7", "Atrasado 7 días"),
                            ("overdue_15", "Atrasado 15 días"),
                            ("overdue_30", "Atrasado 30 días"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "channel",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("sms", "SMS"),
                            ("whatsapp", "WhatsApp"),
                            ("call", "Llamada Telefónica"),
                        ],
                        max_length=20,
                    ),
                ),
                ("scheduled_for", models.DateTimeField()),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendiente"),
                            ("sent", "Enviado"),
                            ("failed", "Fallido"),
                            ("cancelled", "Cancelado"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("message_content", models.TextField()),
                ("error_message", models.TextField(blank=True, null=True)),
                ("customer_response", models.TextField(blank=True, null=True)),
                ("response_received_at", models.DateTimeField(blank=True, null=True)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="collection_reminders",
                        to="loans.customer",
                    ),
                ),
                (
                    "loan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="collection_reminders",
                        to="loans.loan",
                    ),
                ),
                (
                    "loan_schedule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="collection_reminders",
                        to="loans.loanschedule",
                    ),
                ),
                (
                    "sent_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sent_reminders",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "collection_reminders",
                "ordering": ["-scheduled_for"],
                "indexes": [
                    models.Index(
                        fields=["status", "scheduled_for"],
                        name="collection__status_fd98a0_idx",
                    ),
                    models.Index(
                        fields=["loan", "status"], name="collection__loan_id_29e9d5_idx"
                    ),
                ],
            },
        ),
    ]
